// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int      @id @default(autoincrement())
  email         String   @unique
  name          String
  username      String   @unique
  password      String
  role          String   @default("user")
  photo_profile String?  @default("https://picsum.photos/200")
  bio           String?  @default("Welcome to fitcuy")
  created_at    DateTime @default(now())

  // Relasi ke Workout
  workouts_created Workout[] @relation("WorkoutsCreated")
  workouts_updated Workout[] @relation("WorkoutsUpdated")

  @@map("users") // Maps to "users" table in database
}

model Workout {
  id             Int       @id @default(autoincrement())
  exercise_type  String
  duration       Int?      // durasi dalam menit (opsional)
  exercise_date  DateTime
  notes          String?   @default("")
  created_at     DateTime  @default(now())
  updated_at     DateTime  @updatedAt

  // Relasi ke User (created_by)
  created_by     Int
  createdByUser  User      @relation("WorkoutsCreated", fields: [created_by], references: [id])

  // Relasi ke User (updated_by)
  updated_by     Int?
  updatedByUser  User?     @relation("WorkoutsUpdated", fields: [updated_by], references: [id])
  
  @@map("workouts")
}